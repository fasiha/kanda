import"./Doc.css.proxy.js";import*as e from"../web_modules/io-ts.js";import k from"../web_modules/io-ts/lib/PathReporter.js";import I from"../web_modules/pouchdb-browser.js";import A from"../web_modules/pouchdb-upsert.js";import{createElement as a,useEffect as U,useState as v}from"../web_modules/react.js";import f from"../web_modules/recoil.js";I.plugin(A);const y=new I("sidecar"),H=e.type({literal:e.string,pronunciation:e.string,lemmaReading:e.string,lemma:e.string,partOfSpeech:e.array(e.string),inflectionType:e.union([e.array(e.string),e.null]),inflection:e.union([e.array(e.string),e.null])}),V=e.type({left:e.string,cloze:e.string,right:e.string}),z=e.type({wordId:e.string,score:e.union([e.number,e.null]),search:e.string,run:e.union([e.string,V]),runIdx:e.tuple([e.number,e.number]),summary:e.string}),j=e.union([e.string,e.type({ruby:e.string,rt:e.string})]),x=e.type({line:e.string,furigana:e.array(e.array(j)),bunsetsus:e.array(e.array(H)),dictHits:e.array(e.array(e.array(z)))}),B=e.type({line:e.string,hash:e.string,furigana:e.array(e.array(j))}),J=e.array(e.union([e.string,B])),S="/dict-hits-per-line";export async function setupLightweightJson(t){const o=await fetch(S+"/"+t);if(!o.ok){console.error(`Failed to fetch ${t}: ${o.statusText}`);return}const n=J.decode(await o.json());if(n._tag==="Right")return n.right;console.error(k.PathReporter.report(n)),console.error(`Failed to decode ${t}`);return}export async function setupMarkdown(t){const o=await fetch(S+"/"+t);if(!o.ok){console.error(`Failed to fetch ${t}: ${o.statusText}`);return}const n=await o.text(),s=n.split(`
`).map(async c=>{if(!c.includes('<line id="hash-'))return c;const i=c.replace(/.*?<line id="hash-([^"]+)">.*/,"$1"),l=await fetch(`${S}/line-${i}.json`);if(!l.ok)return console.error(`Failed to find sidecar for ${i}`),c;const d=x.decode(await l.json());return d._tag==="Right"?d.right:(console.error(k.PathReporter.report(d)),console.error(`Error decoding sidecar for ${i}`),c)}),r=Promise.all(s);return r}const M=new Map();async function N(t){const o=M.get(t);if(o)return o;const n=await fetch(`/dict-hits-per-line/line-${t}.json`);if(n.ok){const s=x.decode(await n.json());if(s._tag==="Right"){const r=s.right;return M.set(t,r),r}else console.error(k.PathReporter.report(s)),console.error("Error decoding dictionary results sidecar file")}else console.error("Error requesting dictionary results sidecar file",n.statusText);return}const R=f.atom({key:"docData",default:{documentName:"",flashcards:[],furiganaOverrides:{}}}),O=f.selector({key:"docName",get:({get:t})=>t(R).documentName}),C=f.selector({key:"flashcards",get:({get:t})=>t(R).flashcards}),G=f.selector({key:"flashcardsMap",get:({get:t})=>{const o=t(C),n=t(O),s={};for(const r of o){const c={wordId:r.wordId,summary:r.summary};for(const[i,{morphemeIdxs:l}]of Object.entries(r.locations[n]))for(const d of Object.keys(l)){const u=r.locations[n][i].morphemeIdxs[d],_={...c,...u};s[i]?s[i]?.[d]?s[i]?.[d]?.push(_):s[i][d]=[_]:s[i]={[d]:[_]}}}return s}}),K=f.selectorFamily({key:"flashcardsForLine",get:t=>({get:o})=>{const n={...o(G)[t]||{}};for(const s of Object.keys(n)){const r=parseInt(s),c=n[r]||[],i=Math.max(...c.map(l=>l.runIdx[1]-l.runIdx[0]))+1;for(let l=0;l<i;l++)l+r in n||(n[l+r]=[])}return n}}),b=f.atom({key:"location",default:void 0}),ue=f.selector({key:"locationTofurigana",get:({get:t})=>t(b)?.furigana}),W=f.selectorFamily({key:"docToFuriganaOverrides",get:t=>({get:o})=>o(R).furiganaOverrides[t]}),D=f.atom({key:"hits",default:[]}),$=f.atom({key:"popupHidden",default:!0});export function Doc({data:t,documentName:o}){const n=f.useSetRecoilState(R);if(U(()=>{Promise.all([T(o),Q(o)]).then(([r,c])=>n({documentName:o,flashcards:r,furiganaOverrides:c}))},[o]),!t)return a("p",null,"");const s=a("button",{onClick:()=>async function(){const r=await y.allDocs({include_docs:!0});console.log(r);const c=new Blob([JSON.stringify(r)],{type:"application/json"}),i=document.createElement("a");i.href=URL.createObjectURL(c),i.download="pouchdb_sidecar.json",document.body.appendChild(i),i.click()}()},"Export");return a("div",null,a(Z),a(q),...t.map((r,c)=>a(X,{line:r,lineNumber:c,documentName:o})),s)}function q(){const[t,o]=f.useRecoilState($);return t?a("p",null):a("div",{className:"popup"},a("button",{onClick:()=>o(!t)},"X"),a(ee),a(Y))}function X({line:t,lineNumber:o,documentName:n}){const s=f.useSetRecoilState(b),r=f.useSetRecoilState(D),c=f.useSetRecoilState($),i=f.useRecoilValue(K(typeof t=="string"?"":t.hash))||{},l=f.useRecoilValue(W(typeof t=="string"?"":t.hash))||{};if(typeof t=="string")return a("p",{className:"large-content"},t);const d=t.furigana.map((p,h)=>h in l?l[h]:p),u=d.map((p,h)=>typeof p=="string"?a("span",{className:h in i?"flashcard-available":void 0,onClick:g=>L(t.hash,o,h,n,p,r,s,c)},p):a("span",{onClick:g=>L(t.hash,o,h,n,p,r,s,c),className:[h in l?"furigana-override":"",h in i?"flashcard-available":""].filter(g=>!!g).join(" ")||void 0},...p.map(g=>typeof g=="string"?g:a("ruby",null,g.ruby,a("rt",null,g.rt))))),_=Array.from(new Set(Object.values(i).filter(p=>!!p).flatMap(p=>p?p.map(h=>h.summary):"")),p=>a("li",null,p)),m=_.length?a("details",{className:"regular-size-content"},a("summary",null,`${_.length} entries`),a("ol",null,..._)):"";return a("div",null,a("p",{className:"large-content",id:"hash-"+t.hash},...u),m)}async function L(t,o,n,s,r,c,i,l){const d=await N(t);c(d?.dictHits[n]||[]),i({docName:s,morphemeIdx:n,lineHash:t,lineNumber:o,furigana:r}),l(!1)}function F(t,o){return`doc-${t}/furigana-override-${o}`}async function Q(t){const o=F(t,""),n=await y.allDocs({startkey:o,endkey:o+"️",include_docs:!0}),s=n.rows.map(c=>c.doc),r={};for(const c of s)c&&(r[c.lineHash]=c.overrides);return r}function Y(){const t=f.useRecoilValue(b),o=f.useSetRecoilState(R),[n,s]=v([]);if(U(()=>{t&&s(t.furigana.filter(d=>typeof d!="string"))},[t?.furigana]),!t)return a("p",null);if(!n.length)return a("p",null);const r=n.map((d,u)=>a("input",{type:"text",value:d.rt,onChange:_=>{s(n.map((m,p)=>p===u?{ruby:d.ruby,rt:_.target.value}:m))}})),c=d=>{y.upsert(F(t.docName,t.lineHash),u=>{const _=u.overrides||{};if(d)delete _[t.morphemeIdx];else{const m=t.furigana.slice();for(let p=0,h=0;p<m.length;p++)typeof m[p]!="string"&&(m[p]=n[h++]);_[t.morphemeIdx]=m}return o(m=>({...m,furiganaOverrides:{...m.furiganaOverrides,[t.lineHash]:_}})),{...u,lineHash:t.lineHash,overrides:_}})},i=a("button",{onClick:()=>c(!1)},"Save"),l=a("button",{onClick:()=>c(!0)},"Remove");return a("div",null,"edit furigana: ",a("ul",null,...n.map((d,u)=>a("li",null,d.ruby,r[u]))),i,l)}function Z({}){const t=f.useRecoilValue(C);return t.length===0?a("span"):a("div",{className:"list-of-flashcards"},a("ol",null,...t.map(o=>a("li",null,o.summary))))}async function T(t){const o=P(t,""),n=await y.allDocs({startkey:o,endkey:o+"️",include_docs:!0}),s=n.rows.map(l=>l.doc),r=s.filter(l=>!!l&&l.locations[t]),c=l=>Math.min(...Object.values(l.locations[t]).map(d=>d.lineNumber)),i=l=>Math.min(...Object.values(l.locations[t]).map(d=>Math.min(...Object.keys(d.morphemeIdxs).map(u=>parseInt(u)))));return r.sort((l,d)=>{const u=c(l),_=c(d);return u===_?i(l)-i(d):u-_}),r}function ee({}){const t=f.useRecoilValue(O),o=f.useSetRecoilState(R),n=f.useRecoilValue(b),s=f.useRecoilValue(D),[r,c]=v({thisMorpheme:new Set([]),thisDocument:new Map([])}),[i,l]=v(0);return U(()=>{(async function(){if(!n)return;const d=await y.bulkGet({docs:s.flatMap(m=>m.flatMap(p=>({id:P(t,p.wordId)})))}),u=new Set(),_=new Map();d.results.forEach(({docs:m,id:p})=>m.forEach(h=>{if("ok"in h&&(h.ok.locations?.[n.docName]?.[n.lineHash]?.morphemeIdxs[n.morphemeIdx]&&u.add(p),h.ok.locations?.[n.docName])){const g=Object.values(h.ok.locations[n.docName]).map(w=>Object.keys(w.morphemeIdxs).length).reduce((w,E)=>w+E,0);g&&_.set(p,g)}})),c({thisMorpheme:u,thisDocument:_})})()},[s,i,n]),n?a("div",null,a("ul",null,...s.map(d=>a("li",null,a("ol",null,...d.map(u=>{const _=P(t,u.wordId),m=r.thisDocument.get(_),p=(r.thisMorpheme.has(_)?"REMOVE flashcard?":"Add as flashcard")+(m?` (${m} total)`:""),h=a("button",{onClick:()=>oe(u,n).then(({updated:g})=>{g&&l(i+1),T(t).then(w=>o(E=>({...E,flashcards:w})))})},p);return a("li",null,...te(u.run,u.summary),h)})))))):a("p",null)}function te(t,o){const n=new Set((typeof t=="string"?t:t.cloze).split(""));return o.split("").map(s=>n.has(s)?a("span",{className:"highlight-popup"},s):a("span",null,s))}function P(t,o){return`doc-${t}/annotated-wordId-${o}`}async function oe({wordId:t,summary:o,runIdx:n},{docName:s,lineHash:r,lineNumber:c,morphemeIdx:i}){const l=Date.now(),d=await y.upsert(P(s,t),u=>{u.summary=o;const _={[s]:{[r]:{lineNumber:c,morphemeIdxs:{[i]:{timestamp:l,runIdx:n}}}}};return u.locations?u.locations[s]?u.locations[s][r]?u.locations[s][r].morphemeIdxs[i]?delete u.locations[s][r].morphemeIdxs[i]:u.locations[s][r].morphemeIdxs[i]=_[s][r].morphemeIdxs[i]:u.locations[s][r]=_[s][r]:u.locations[s]=_[s]:u.locations=_,{...u,summary:o,wordId:t,locations:u.locations}});return d}
