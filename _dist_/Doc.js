import"./Doc.css.proxy.js";import*as b from"../web_modules/io-ts.js";import B from"../web_modules/io-ts/lib/PathReporter.js";import G from"../web_modules/pouchdb-browser.js";import T from"../web_modules/pouchdb-upsert.js";import{createElement as g,useEffect as C,useState as D}from"../web_modules/react.js";import o from"../web_modules/recoil.js";G.plugin(T);const u=new G("sidecar"),U=b.type({literal:b.string,pronunciation:b.string,lemmaReading:b.string,lemma:b.string,partOfSpeech:b.array(b.string),inflectionType:b.union([b.array(b.string),b.null]),inflection:b.union([b.array(b.string),b.null])}),V=b.type({left:b.string,cloze:b.string,right:b.string}),W=b.type({wordId:b.string,score:b.union([b.number,b.null]),search:b.string,run:b.union([b.string,V]),runIdx:b.tuple([b.number,b.number]),summary:b.string}),H=b.union([b.string,b.type({ruby:b.string,rt:b.string})]),I=b.type({line:b.string,furigana:b.array(b.array(H)),bunsetsus:b.array(b.array(U)),dictHits:b.array(b.array(b.array(W)))}),X=b.type({line:b.string,hash:b.string,furigana:b.array(b.array(H))}),Y=b.array(b.union([b.string,X])),E="/dict-hits-per-line";export async function setupLightweightJson(a){const c=await fetch(E+"/"+a);if(!c.ok){console.error(`Failed to fetch ${a}: ${c.statusText}`);return}const d=Y.decode(await c.json());if(d._tag==="Right")return d.right;console.error(B.PathReporter.report(d)),console.error(`Failed to decode ${a}`);return}export async function setupMarkdown(a){const c=await fetch(E+"/"+a);if(!c.ok){console.error(`Failed to fetch ${a}: ${c.statusText}`);return}const d=await c.text(),e=d.split(`
`).map(async i=>{if(!i.includes('<line id="hash-'))return i;const h=i.replace(/.*?<line id="hash-([^"]+)">.*/,"$1"),j=await fetch(`${E}/line-${h}.json`);if(!j.ok)return console.error(`Failed to find sidecar for ${h}`),i;const l=I.decode(await j.json());return l._tag==="Right"?l.right:(console.error(B.PathReporter.report(l)),console.error(`Error decoding sidecar for ${h}`),i)}),f=Promise.all(e);return f}const J=new Map();async function Z(a){const c=J.get(a);if(c)return c;const d=await fetch(`/dict-hits-per-line/line-${a}.json`);if(d.ok){const e=I.decode(await d.json());if(e._tag==="Right"){const f=e.right;return J.set(a,f),f}else console.error(B.PathReporter.report(e)),console.error("Error decoding dictionary results sidecar file")}else console.error("Error requesting dictionary results sidecar file",d.statusText);return}const v=o.atom({key:"docData",default:{documentName:"",flashcards:[],furiganaOverrides:{}}}),K=o.selector({key:"docName",get:({get:a})=>a(v).documentName}),L=o.selector({key:"flashcards",get:({get:a})=>a(v).flashcards}),_=o.selector({key:"flashcardsMap",get:({get:a})=>{const c=a(L),d=a(K),e={};for(const f of c){const i={wordId:f.wordId,summary:f.summary};for(const[h,{morphemeIdxs:j}]of Object.entries(f.locations[d]))for(const l of Object.keys(j)){const k=f.locations[d][h].morphemeIdxs[l],m={...i,...k};e[h]?e[h]?.[l]?e[h]?.[l]?.push(m):e[h][l]=[m]:e[h]={[l]:[m]}}}return e}}),$=o.selectorFamily({key:"flashcardsForLine",get:a=>({get:c})=>{const d={...c(_)[a]||{}};for(const e of Object.keys(d)){const f=parseInt(e),i=d[f]||[],h=Math.max(...i.map(j=>j.runIdx[1]-j.runIdx[0]))+1;for(let j=0;j<h;j++)j+f in d||(d[j+f]=[])}return d}}),z=o.atom({key:"location",default:void 0}),pa=o.selector({key:"locationTofurigana",get:({get:a})=>a(z)?.furigana}),aa=o.selectorFamily({key:"docToFuriganaOverrides",get:a=>({get:c})=>c(v).furiganaOverrides[a]}),M=o.atom({key:"hits",default:[]}),N=o.atom({key:"popupHidden",default:!0});export function Doc({data:a,documentName:c}){const d=o.useSetRecoilState(v);C(()=>{Promise.all([Q(c),da(c)]).then(([f,i])=>d({documentName:c,flashcards:f,furiganaOverrides:i}))},[c]);if(!a)return g("p",null,"");const e=g("button",{onClick:()=>async function(){const f=await u.allDocs({include_docs:!0});console.log(f);const i=new Blob([JSON.stringify(f)],{type:"application/json"}),h=document.createElement("a");h.href=URL.createObjectURL(i),h.download="pouchdb_sidecar.json",document.body.appendChild(h),h.click()}()},"Export");return g("div",null,g(fa),g(ba),...a.map((f,i)=>g(ca,{line:f,lineNumber:i,documentName:c})),e)}function ba(){const[a,c]=o.useRecoilState(N);return a?g("p",null):g("div",{className:"popup"},g("button",{onClick:()=>c(!a)},"X"),g(ga),g(ea))}function ca({line:a,lineNumber:c,documentName:d}){const e=o.useSetRecoilState(z),f=o.useSetRecoilState(M),i=o.useSetRecoilState(N),h=o.useRecoilValue($(typeof a==="string"?"":a.hash))||{},j=o.useRecoilValue(aa(typeof a==="string"?"":a.hash))||{};if(typeof a==="string")return g("p",{className:"large-content"},a);const l=a.furigana.map((n,q)=>q in j?j[q]:n),k=l.map((n,q)=>typeof n==="string"?g("span",{className:q in h?"flashcard-available":void 0,onClick:s=>O(a.hash,c,q,d,n,f,e,i)},n):g("span",{onClick:s=>O(a.hash,c,q,d,n,f,e,i),className:[q in j?"furigana-override":"",q in h?"flashcard-available":""].filter(s=>!!s).join(" ")||void 0},...n.map(s=>typeof s==="string"?s:g("ruby",null,s.ruby,g("rt",null,s.rt))))),m=Array.from(new Set(Object.values(h).filter(n=>!!n).flatMap(n=>n?n.map(q=>q.summary):"")),n=>g("li",null,n)),r=m.length?g("details",{className:"regular-size-content"},g("summary",null,`${m.length} entries`),g("ol",null,...m)):"";return g("div",null,g("p",{className:"large-content",id:"hash-"+a.hash},...k),r)}async function O(a,c,d,e,f,i,h,j){const l=await Z(a);i(l?.dictHits[d]||[]),h({docName:e,morphemeIdx:d,lineHash:a,lineNumber:c,furigana:f}),j(!1)}function P(a,c){return`doc-${a}/furigana-override-${c}`}async function da(a){const c=P(a,""),d=await u.allDocs({startkey:c,endkey:c+"️",include_docs:!0}),e=d.rows.map(i=>i.doc),f={};for(const i of e)i&&(f[i.lineHash]=i.overrides);return f}function ea(){const a=o.useRecoilValue(z),c=o.useSetRecoilState(v),[d,e]=D([]);C(()=>{a&&e(a.furigana.filter(l=>typeof l!=="string"))},[a?.furigana]);if(!a)return g("p",null);if(!d.length)return g("p",null);const f=d.map((l,k)=>g("input",{type:"text",value:l.rt,onChange:m=>{e(d.map((r,n)=>n===k?{ruby:l.ruby,rt:m.target.value}:r))}})),i=l=>{u.upsert(P(a.docName,a.lineHash),k=>{const m=k.overrides||{};if(l)delete m[a.morphemeIdx];else{const r=a.furigana.slice();for(let n=0,q=0;n<r.length;n++)typeof r[n]!=="string"&&(r[n]=d[q++]);m[a.morphemeIdx]=r}return c(r=>({...r,furiganaOverrides:{...r.furiganaOverrides,[a.lineHash]:m}})),{...k,lineHash:a.lineHash,overrides:m}})},h=g("button",{onClick:()=>i(!1)},"Save"),j=g("button",{onClick:()=>i(!0)},"Remove");return g("div",null,"edit furigana: ",g("ul",null,...d.map((l,k)=>g("li",null,l.ruby,f[k]))),h,j)}function fa({}){const a=o.useRecoilValue(L);return a.length===0?g("span"):g("div",{className:"list-of-flashcards"},g("ol",null,...a.map(c=>g("li",null,c.summary))))}async function Q(a){const c=A(a,""),d=await u.allDocs({startkey:c,endkey:c+"️",include_docs:!0}),e=d.rows.map(j=>j.doc),f=e.filter(j=>!!j&&j.locations[a]),i=j=>Math.min(...Object.values(j.locations[a]).map(l=>l.lineNumber)),h=j=>Math.min(...Object.values(j.locations[a]).map(l=>Math.min(...Object.keys(l.morphemeIdxs).map(k=>parseInt(k)))));return f.sort((j,l)=>{const k=i(j),m=i(l);return k===m?h(j)-h(l):k-m}),f}function ga({}){const a=o.useRecoilValue(K),c=o.useSetRecoilState(v),d=o.useRecoilValue(z),e=o.useRecoilValue(M),[f,i]=D({thisMorpheme:new Set([]),thisDocument:new Map([])}),[h,j]=D(0);return C(()=>{(async function(){if(!d)return;const l=await u.bulkGet({docs:e.flatMap(r=>r.flatMap(n=>({id:A(a,n.wordId)})))}),k=new Set(),m=new Map();l.results.forEach(({docs:r,id:n})=>r.forEach(q=>{if("ok"in q){q.ok.locations?.[d.docName]?.[d.lineHash]?.morphemeIdxs[d.morphemeIdx]&&k.add(n);if(q.ok.locations?.[d.docName]){const s=Object.values(q.ok.locations[d.docName]).map(y=>Object.keys(y.morphemeIdxs).length).reduce((y,F)=>y+F,0);s&&m.set(n,s)}}})),i({thisMorpheme:k,thisDocument:m})})()},[e,h,d]),d?g("div",null,g("ul",null,...e.map(l=>g("li",null,g("ol",null,...l.map(k=>{const m=A(a,k.wordId),r=f.thisDocument.get(m),n=(f.thisMorpheme.has(m)?"REMOVE flashcard?":"Add as flashcard")+(r?` (${r} total)`:""),q=g("button",{onClick:()=>ia(k,d).then(({updated:s})=>{s&&j(h+1),Q(a).then(y=>c(F=>({...F,flashcards:y})))})},n);return g("li",null,...ha(k.run,k.summary),q)})))))):g("p",null)}function ha(a,c){const d=new Set((typeof a==="string"?a:a.cloze).split(""));return c.split("").map(e=>d.has(e)?g("span",{className:"highlight-popup"},e):g("span",null,e))}function A(a,c){return`doc-${a}/annotated-wordId-${c}`}async function ia({wordId:a,summary:c,runIdx:d},{docName:e,lineHash:f,lineNumber:i,morphemeIdx:h}){const j=Date.now(),l=await u.upsert(A(e,a),k=>{k.summary=c;const m={[e]:{[f]:{lineNumber:i,morphemeIdxs:{[h]:{timestamp:j,runIdx:d}}}}};return k.locations?k.locations[e]?k.locations[e][f]?k.locations[e][f].morphemeIdxs[h]?delete k.locations[e][f].morphemeIdxs[h]:k.locations[e][f].morphemeIdxs[h]=m[e][f].morphemeIdxs[h]:k.locations[e][f]=m[e][f]:k.locations[e]=m[e]:k.locations=m,{...k,summary:c,wordId:a,locations:k.locations}});return l}
