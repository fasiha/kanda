import"./Docs.css.proxy.js";import{createElement as e,Fragment as $,useEffect as B,useState as S}from"../web_modules/react.js";import R from"../web_modules/recoil.js";const L="https://curtiz-japanese-nlp.glitch.me/api/v1/sentences",C=R.atom({key:"docs",default:{}}),q=R.selectorFamily({key:"doc",get:t=>({get:n})=>n(C)[t]}),T=R.atom({key:"clickedMorpheme",default:void 0});import F from"../web_modules/pouchdb-browser.js";import G from"../web_modules/pouchdb-upsert.js";F.plugin(G);const k=new F("sidecar-docs");function D(t){return`doc-${t}`}async function V(){const t=D(""),n=await k.allDocs({startkey:t,endkey:t+"️",include_docs:!0}),a={};for(const{doc:o}of n.rows)if(o){const r={name:o.name,unique:o.unique,contents:o.contents,raws:o.raws,annotated:o.annotated,overrides:o.overrides};a[o.unique]=r}return a}async function J(t){return k.upsert(D(t),()=>({_deleted:!0}))}async function W(){const t=[];return new Promise((n,a)=>{k.changes({filter:o=>o._deleted}).on("change",o=>t.push(o.id)).on("complete",()=>{n(t)}).on("error",o=>a(o))})}async function K(){const t=await W(),n=await Promise.all(t.map(o=>k.get(o,{revs:!0,open_revs:"all"}).then(r=>{const s=r[0].ok._revisions,i=s.start-1+"-"+s.ids[1],b=k.get(o,{rev:i});return b}))),a=n.map(({name:o,unique:r,contents:s,raws:i,annotated:b,overrides:h})=>({name:o,unique:r,contents:s,raws:i,annotated:b,overrides:h}));return a}export function DocsComponent({}){const[t,n]=R.useRecoilState(C),[a,o]=S(!1);B(()=>{a||(async()=>{const i=await V();Object.keys(i).length>0&&n(i),o(!0)})()},[a]);const r=e("div",{id:"all-docs",className:"left-containee"},...Object.keys(t).map(i=>e(Q,{unique:i})),e(H),e(nt)),s=e("div",{className:"right-containee"},e(Z));return e("div",{className:"container"},r,s)}function Q({unique:t}){const n=R.useRecoilValue(q(t)),a=R.useSetRecoilState(C),o=R.useSetRecoilState(T),[r,s]=S(!1);if(!n)return e($);const i=e("button",{onClick:()=>J(t).then(()=>a(l=>{const c={...l};return delete c[t],c}))},"Delete"),b=e("button",{onClick:()=>s(!r)},r?"Cancel":"Edit"),h=n.overrides,f=r?e(H,{existing:n,done:()=>s(!r)}):e("section",null,...n.raws.map((l,c)=>l?e(Y,{rawAnalysis:l,annotated:n.annotated[c],docUnique:t,lineNumber:c,overrides:h}):e("p",{onClick:()=>o(void 0)},n.contents[c])));return e("div",{className:"doc"},e("h2",null,n.name||t,i,b),f,e(ot,{overrides:n.overrides,docUnique:t}),e(X,{doc:n}))}function X({doc:t}){return e("details",{className:"regular-sized limited-height"},e("summary",null,"All dictionary annotations"),e("ol",null,...t.annotated.flatMap(n=>n?.hits.map(a=>e("li",null,a.summary))).filter(n=>!!n)))}function Y({rawAnalysis:t,docUnique:n,lineNumber:a,annotated:o,overrides:r}){const s=R.useSetRecoilState(T),{furigana:i,hits:b}=t,h={docUnique:n,lineNumber:a,annotations:o,overrides:r},f=new Set();if(o)for(const{startIdx:c,endIdx:d}of o.hits)for(let p=c;p<d;p++)f.add(p);const l=f.size>0?c=>f.has(c)?"annotated-text":void 0:()=>{};return e("p",null,...i.map((c,d)=>o?.furigana[d]||r[j(c)]||c).flatMap((c,d)=>c.map(p=>{const y={...h,rawHits:b[d],morpheme:{rawFurigana:t.furigana[d],annotatedFurigana:o?.furigana[d]},morphemeIdx:d};return typeof p=="string"?e("span",{className:l(d),onClick:()=>s(y)},p):e("ruby",{className:l(d),onClick:()=>s(y)},p.ruby,e("rt",null,p.rt))})))}function H({existing:t,done:n}){const[a,o]=S(t?t.name:""),[r,s]=S(t?t.contents.join(`
`):""),i=R.useSetRecoilState(C),b=e("input",{type:"text",value:a,onChange:l=>o(l.target.value)}),h=e("textarea",{value:r,onChange:l=>s(l.currentTarget.value)}),f=e("button",{onClick:async()=>{const l=r.split(`
`);let c=new Map(t?t.contents.map((y,E)=>[y,E]):[]),d=t?l.filter(y=>!c.has(y)):l;const p=await fetch(L,{body:JSON.stringify({sentences:d}),headers:{"Content-Type":"application/json"},method:"POST"});if(p.ok){const y=[],E=[],I=await p.json();{let u=0;for(const g of l){const _=c.get(g);if(t&&_!==void 0)y.push(t.raws[_]),E.push(t.annotated[_]);else{const U=I[u];y.push(typeof U=="string"?void 0:{sha1:await st(g,"sha-1"),text:g,hits:U.hits,furigana:U.furigana}),E.push(void 0),u++}}}const m=t?t.unique:new Date().toISOString();y.length===E.length&&E.length===l.length||console.error("Warning: unexpected length of lines vs raw analysis vs annotated analysis",{raws:y,annotated:E,contents:l});const P={name:a,unique:m,contents:l,raws:y,annotated:E,overrides:t?t.overrides:{}};if(t)for(const[u,g]of t.annotated.entries()){const _=P.raws[u],U=t.raws[u];if(!g||!_||!U||P.annotated[u])continue;const w={sha1:_.sha1,text:_.text,furigana:[],hits:[]},v=new Map();for(const x of g.furigana)x&&v.set(j(x),x);w.furigana=_.furigana.map(x=>v.get(j(x))||x);const z=_.furigana.map(j);for(const x of g.hits){const O=U.furigana.slice(x.startIdx,x.endIdx).map(j),A=at(z,O);if(A>=0){const M=lt(it(z.slice(0,A).join(""),O.join(""),z.slice(A+O.length).join("")));w.hits.push({summary:x.summary,wordId:x.wordId,run:M,startIdx:A,endIdx:A+O.length})}}P.annotated[u]=w}k.upsert(D(m),()=>P).then(()=>i(u=>({...u,[m]:P}))).then(()=>n?n():"")}else console.error("error parsing sentences: "+p.statusText)}},"Submit");return e("div",null,t?"":e("h2",null,"Create a new document"),b,e("br"),h,e("br"),f)}function Z({}){const t=R.useRecoilValue(T),n=R.useSetRecoilState(C),a=R.useSetRecoilState(T);if(!t)return e("div",null);const{rawHits:o,annotations:r,lineNumber:s,docUnique:i,morphemeIdx:b}=t,h=new Set();if(r)for(const{wordId:l,run:c}of r.hits)h.add(l+N(c));function f(l,c,d,p){n(y=>{const E={...y},I=y[i];if(I){const m={...I};m.annotated=m.annotated.slice();const P=m.annotated[s];if(P){const u=N(c),g=P.hits.findIndex(_=>_.wordId===l.wordId&&N(_.run)===u);if(g>=0){const _=P.hits.slice();_.splice(g,1),m.annotated[s]={...P,hits:_}}else{const _={run:c,startIdx:d,endIdx:p,wordId:l.wordId,summary:l.summary};m.annotated[s]={...P,hits:P.hits.concat(_)}}}else{const u={run:c,startIdx:d,endIdx:p,wordId:l.wordId,summary:l.summary};m.annotated[s]={furigana:Array.from(Array(m.raws[s]?.furigana.length)),hits:[u],sha1:m.raws[s]?.sha1||"",text:m.raws[s]?.text||""}}E[i]=m,a(u=>u&&{...u,annotations:m.annotated[s]}),k.upsert(D(i),()=>({...m}))}return E})}return e("div",null,...o.results.map(l=>e("ol",null,...l.results.map(c=>{const d=h.has(c.wordId+N(l.run));return e("li",{className:d?"annotated-entry":void 0},...tt(l.run,c.summary),e("button",{onClick:()=>f(c,l.run,o.startIdx,l.endIdx)},d?"Entry highlighted! Remove?":"Create highlight?"))}))),e(et,{morpheme:t.morpheme,overrides:t.overrides,docUnique:i,lineNumber:s,morphemeIdx:b,key:`${i}${s}${b}`}))}function tt(t,n){const a=new Set((typeof t=="string"?t:t.cloze).split(""));return n.split("").map(o=>a.has(o)?e("span",{className:"highlighted"},o):o)}function et({morpheme:t,overrides:n,docUnique:a,lineNumber:o,morphemeIdx:r}){const s=(t?.annotatedFurigana||t?.rawFurigana||[]).filter(u=>typeof u!="string"),i=j(t?.annotatedFurigana||t?.rawFurigana||[]),b=R.useSetRecoilState(C),h=s.map(u=>u.rt),f=i in n,[l,c]=S(h),[d,p]=S(f);if(s.length===0||!t)return e($);const y=l.map((u,g)=>e("input",{type:"text",value:u,onChange:_=>c(l.map((U,w)=>w===g?_.target.value:U))})),E=e("input",{type:"checkbox",name:"globalCheckbox",checked:d,onChange:()=>p(!d)}),I=e("label",{htmlFor:"globalCheckbox"},"Global override?"),m=e("button",{onClick:()=>{b(u=>{const g=[];{let w=0;for(const v of t.rawFurigana)g.push(typeof v=="string"?v:{ruby:v.ruby,rt:l[w++]})}const _=u[a],U=_?.raws[o];if(_&&U){const w={..._};if(d)w.overrides={...w.overrides,[i]:g};else{w.annotated=w.annotated.slice();const v=w.annotated[o]?{...w.annotated[o]}:{text:U.text,sha1:U.sha1,furigana:Array.from(Array(U.furigana.length)),hits:[]};v.furigana=v.furigana.slice(),v.furigana[r]=g,w.annotated[o]=v}return k.upsert(D(a),()=>({...w})),{...u,[a]:w}}return u})}},"Submit override"),P=e("button",{onClick:()=>{c(h),p(f)}},"Cancel");return e("div",null,e("h3",null,"Override for: "+i),e("ol",null,...s.map((u,g)=>e("li",null,u.ruby+" ",y[g]))),I,E,m)}function nt(){const t=R.useSetRecoilState(C),[n,a]=S([]),o=e("button",{onClick:()=>K().then(s=>a(s))},"Refresh deleted docs"),r=s=>k.upsert(s.unique,()=>s).then(()=>t(i=>({...i,[s.unique]:s})));return e("div",null,e("h2",null,"Deleted"),o,e("ol",null,...n.map(s=>e("li",null,`${s.name} (${s.unique}): ${s.contents.join(" ").slice(0,15)}…`,e("button",{onClick:()=>r(s)},"Undelete")))))}function ot({overrides:t,docUnique:n}){const a=R.useSetRecoilState(C),o=Object.keys(t);return o.length===0?e($):e("div",null,e("h3",null,"Overrides"),e("ol",null,...o.map(r=>{const s=()=>a(h=>{const f={...h[n]};return f.overrides={...f.overrides},delete f.overrides[r],k.upsert(D(n),()=>({...f})),{...h,[n]:f}}),i=t[r].map(h=>typeof h=="string"?h:e("ruby",null,h.ruby,e("rt",null,h.rt))),b=e("button",{onClick:s},"Delete");return e("li",null,`${r} → `,...i," ",b)})))}async function st(t,n){const a=new TextEncoder().encode(t),o=await crypto.subtle.digest(n,a),r=Array.from(new Uint8Array(o)),s=r.map(i=>i.toString(16).padStart(2,"0")).join("");return s}function N(t){return typeof t=="string"?t:`${t.left}${t.cloze}${t.right}`}function j(t){return t.map(n=>typeof n=="string"?n:n.ruby).join("")}function at(t,n,a=0){if(n.length>t.length)return-1;t:for(let o=a;o<t.length-n.length+1;o++){for(let r=0;r<n.length;r++)if(t[o+r]!==n[r])continue t;return o}return-1}function rt(t,n){const a=t.indexOf(n);return a>=0&&t.indexOf(n,a+1)<0}function it(t,n,a){const o=t+n+a;let r="",s="",i=0;for(;!rt(o,r+n+s);){if(i++,i>t.length&&i>a.length)throw console.error({sentence:o,left:t,cloze:n,right:a,leftContext:r,rightContext:s,contextLength:i}),new Error("Ran out of context to build unique cloze");r=t.slice(-i),s=a.slice(0,i)}return{left:r,cloze:n,right:s}}function lt(t){return!t.right&&!t.left?t.cloze:t}
